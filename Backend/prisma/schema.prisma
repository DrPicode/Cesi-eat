// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

model User {
  Id_User        Int       @id @default(autoincrement())
  username       String
  password       String
  userfirstname  String
  email          String
  phone          String
  status         String
  addresses      Address[] @relation("UserAddresses")
  restaurants    Restaurant[] @relation("UserRestaurants")
  orders         Orders[]
  Delivery       Delivery? @relation(fields: [id_delivery], references: [Id_Delivery])
  id_delivery    Int?
}

model Address {
  Id_Address  Int      @id @default(autoincrement())
  Adress      String
  Is_Deleted  Boolean
  users       User[]   @relation("UserAddresses")
  restaurants Is_At[]
  orders      Orders[]
}

model Order_Status {
  Id_Order_Status Int      @id @default(autoincrement())
  Order_Status    String
  orders          Orders[]
}

model Restaurant_Type {
  Id_Type Int         @id @default(autoincrement())
  Type    String
  restaurants Restaurant[]
}

model Restaurant {
  Id_Restaurant Int        @id @default(autoincrement())
  Name          String
  Is_Deleted    Boolean
  Id_Type       Int
  type          Restaurant_Type @relation(fields: [Id_Type], references: [Id_Type])
  addresses     Is_At[]
  orders        Orders[]
}

model Orders {
  Order_ID      Int      @id @default(autoincrement())
  Order_Date    DateTime
  Boisson       String?
  Sandwitch     String?
  Accompagnement String?
  Price         Decimal  @db.Decimal(15, 2)
  Delivery_Fees Decimal? @db.Decimal(15, 2)
  Service_Fees  Decimal? @db.Decimal(15, 2)
  Delivery_Hour DateTime
  Delivery_Code Int
  Is_Deleted    Boolean
  Id_User       Int
  Id_Address    Int
  Id_Order_Status Int
  Id_Deliveryman Int
  Id_Restaurant Int

  user         User        @relation(fields: [Id_User], references: [Id_User])
  address      Address     @relation(fields: [Id_Address], references: [Id_Address])
  orderStatus  Order_Status @relation(fields: [Id_Order_Status], references: [Id_Order_Status])
  deliveryman  User        @relation(fields: [Id_Deliveryman], references: [Id_User])
  restaurant   Restaurant  @relation(fields: [Id_Restaurant], references: [Id_Restaurant])
}

model Is_At {
  Id_Restaurant Int
  Id_Address    Int
  restaurant    Restaurant @relation(fields: [Id_Restaurant], references: [Id_Restaurant])
  address       Address    @relation(fields: [Id_Address], references: [Id_Address])

  @@id([Id_Restaurant, Id_Address])
}

model Delivery {
  Id_Delivery   Int @id @default(autoincrement())
  Id_User       Int
  user          User @relation(fields: [Id_User], references: [Id_User])
}